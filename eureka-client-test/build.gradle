apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'spring-boot'
apply plugin: 'application'
apply plugin: 'io.spring.dependency-management'

group = 'spring-cloud-demo'
applicationName = 'eureka-client-test'
version = '0.0.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'
buildDir = 'target'

repositories {
  mavenLocal()
  maven { url "http://192.168.88.8:8081/nexus/content/groups/public" }
  maven { url "http://192.168.88.8:8081/nexus/content/repositories/releases" }
  mavenCentral()
}

ext {
}

dependencyManagement {
  imports {
    mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Dalston.SR2'
  }
}

dependencies {
  compile "org.springframework.boot:spring-boot-starter-web"
  compile "org.springframework.boot:spring-boot-starter-aop"
  compile "org.springframework.cloud:spring-cloud-starter-eureka"
  compile "org.springframework.cloud:spring-cloud-starter-bus-amqp"
  compile "org.springframework.cloud:spring-cloud-starter-config"
  compile "org.springframework.cloud:spring-cloud-starter-stream-rabbit"
  compile "org.springframework.cloud:spring-cloud-starter-sleuth"
  compile ("spring-cloud-demo:feign-client:0.0.1") {
    exclude group: 'org.springframework', module: 'spring-web'
    exclude group: 'org.springframework.cloud', module: 'spring-cloud-netflix-core'
  }

  compile "org.springframework.retry:spring-retry"

  testCompile "org.springframework.boot:spring-boot-starter-test"
}

configurations {
  compile.exclude group: "log4j", module: "log4j"
  compile.exclude group: "org.slf4j", module: "slf4j-log4j12"
//  compile.exclude group: "org.hibernate", module: "hibernate-validator"
}

mainClassName = 'com.jthink.spring.cloud.demo.eureka.client.test.application.Application'

buildscript {
  ext {
    springBootVersion = '1.5.6.RELEASE'
  }

  repositories {
    mavenLocal()
    maven { url "http://192.168.88.8:8081/nexus/content/groups/public" }
    mavenCentral()
  }

  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath("io.spring.gradle:dependency-management-plugin:1.0.2.RELEASE")
  }
}

startScripts {
  doLast {
    unixScript.text = unixScript.text.replaceAll("lib/(.*)\n", "lib/\\*")
  }
}